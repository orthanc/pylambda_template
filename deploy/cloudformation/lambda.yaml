---
Parameters:
  LambdaName:
    Type: String
  SourceBucket:
    Type: String
  SourceKey:
    Type: String
  Handler:
    Type: String

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CloudwatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaName}"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaName}:*"

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaName
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref SourceKey
      Handler: !Ref Handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: "python3.6"
      Timeout: 3

Outputs:
  Build:
    Value: !Ref Lambda
  BuildRole:
    Value: !Ref LambdaRole
